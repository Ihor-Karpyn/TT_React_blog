{"version":3,"sources":["api/api.ts","components/NewPostForm.tsx","components/PostsList.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","a","item","fetch","response","json","getPostComments","postId","addComment","newComment","method","headers","body","JSON","stringify","deleteComment","commentsId","addPost","newPost","getPosts","getPostDetails","deletePost","NewPostForm","props","onAdd","useState","title","setTitle","setBody","className","onSubmit","event","preventDefault","type","name","placeholder","required","value","onChange","target","PostsList","selectedPostId","selectPost","posts","setPosts","useEffect","then","map","post","onClick","id","NewCommentForm","PostDetails","setPost","comments","setComments","isVisible","setVisible","length","comment","App","setPostId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAaA,EAAW,mCAEXC,EAAO,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DAAmBC,EAAnB,+BAA0B,GAA1B,SACEC,MAAM,GAAD,OAAIL,EAAJ,YAAgBE,GAAOE,GAD9B,cACfE,EADe,yBAGdA,EAASC,QAHK,2CAAH,sDAMPC,EAAe,uCAAG,WAAOC,GAAP,SAAAN,EAAA,+EACtBF,EAAQ,mBAAD,OAAoBQ,KADL,2CAAH,sDAIfC,EAAU,uCAAG,WAAOC,GAAP,SAAAR,EAAA,+EACjBF,EAAQ,WAAY,CACzBW,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAUL,MANC,2CAAH,sDAUVM,EAAa,uCAAG,WAAOC,GAAP,SAAAf,EAAA,+EACpBF,EAAQ,YAAD,OAAaiB,GAAc,CAAEN,OAAQ,YADxB,2CAAH,sDAIbO,EAAO,uCAAG,WAAOC,GAAP,SAAAjB,EAAA,+EACdF,EAAQ,QAAS,CACtBW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUI,MANF,2CAAH,sDAUPC,EAAQ,uCAAG,sBAAAlB,EAAA,+EACfF,EAAQ,QAAS,CACtBW,OAAQ,MACRC,QAAS,CACP,eAAgB,uBAJE,2CAAH,qDASRS,EAAc,uCAAG,WAAOb,GAAP,SAAAN,EAAA,+EACrBF,EAAQ,SAAD,OAAUQ,EAAV,sBADc,2CAAH,sDAIdc,EAAU,uCAAG,WAAOd,GAAP,SAAAN,EAAA,+EACjBF,EAAQ,SAAD,OAAUQ,GAAU,CAAEG,OAAQ,YADpB,2CAAH,sD,OC3CVY,EAA+B,SAACC,GAC3C,IAAQC,EAAUD,EAAVC,MACR,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOb,EAAP,KAAagB,EAAb,KAcA,OACE,uBAAMC,UAAU,cAAcC,SAbX,SAACC,GACpBA,EAAMC,iBAENR,EAAM,CACJE,QACAd,SAGFe,EAAS,IACTC,EAAQ,KAIR,UACE,qBAAKC,UAAU,aAAf,SACE,uBACEI,KAAK,OACLC,KAAK,QACLC,YAAY,iBACZN,UAAU,qBACVO,UAAQ,EACRC,MAAOX,EACPY,SAAU,SAACP,GAAD,OAAWJ,EAASI,EAAMQ,OAAOF,YAI/C,qBAAKR,UAAU,aAAf,SACE,0BACEK,KAAK,OACLC,YAAY,iBACZN,UAAU,qBACVQ,MAAOzB,EACP0B,SAAU,SAACP,GAAD,OAAWH,EAAQG,EAAMQ,OAAOF,YAI9C,wBACEJ,KAAK,SACLJ,UAAU,oCAFZ,4BCtCOW,EAA6B,SAACjB,GACzC,IAAQkB,EAA+BlB,EAA/BkB,eAAgBC,EAAenB,EAAfmB,WACxB,EAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACR1B,IACG2B,MAAK,SAAA1C,GAAQ,OAAIwC,EAASxC,QAC5B,IAsBH,OACE,mCACE,sBAAKyB,UAAU,YAAf,UACE,wCACA,cAAC,EAAD,CACEL,MAjBW,SAACN,GAClBD,EAAQC,GACL4B,MAAK,kBAAM3B,OACX2B,MAAK,SAAA1C,GAAQ,OAAIwC,EAASxC,SAiBzB,oBAAIyB,UAAU,kBAAd,SACGc,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAAInB,UAAU,kBAAd,UACE,8BACGmB,EAAKtB,QAER,sBAAKG,UAAU,qBAAf,UACE,wBACEI,KAAK,SACLJ,UAAU,2BACVoB,QAAS,kBAxBK1C,EAwBsByC,EAAKE,QAvBvD7B,EAAWd,GACRuC,MAAK,kBAAM3B,OACX2B,MAAK,SAAA1C,GAAQ,OAAIwC,EAASxC,MAHF,IAACG,GAqBhB,oBAOA,wBACE0B,KAAK,SACLJ,UAAU,2BACVoB,QAAS,kBA7CHC,EA6CsBF,EAAKE,QA3C7CR,EADED,IAAmBS,EACV,EAEAA,GAJM,IAACA,GA0CR,SAKGT,IAAmBO,EAAKE,GACrB,QACA,cAnB2BF,EAAKE,eCzCzCC,EAAkC,SAAC5B,GAC9C,IAAQkB,EAA0BlB,EAA1BkB,eAAgBjB,EAAUD,EAAVC,MACxB,EAAwBC,mBAAS,IAAjC,mBAAOb,EAAP,KAAagB,EAAb,KAaA,OACE,uBAAMC,UAAU,iBAAiBC,SAZd,SAACC,GACpBA,EAAMC,iBAENR,EAAM,CACJjB,OAAQkC,EACR7B,SAGFgB,EAAQ,KAIR,UACE,qBAAKC,UAAU,aAAf,SACE,0BACEK,KAAK,OACLC,YAAY,oBACZN,UAAU,wBACVO,UAAQ,EACRC,MAAOzB,EACP0B,SAAU,SAACP,GAAD,OAAWH,EAAQG,EAAMQ,OAAOF,YAI9C,wBACEJ,KAAK,SACLJ,UAAU,uCAFZ,+BC3BOuB,EAA+B,SAAC7B,GAC3C,IAAQkB,EAAmBlB,EAAnBkB,eACR,EAAwBhB,mBAAS,MAAjC,mBAAOuB,EAAP,KAAaK,EAAb,KACA,EAAgC5B,mBAAS,IAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KACA,EAAgC9B,oBAAS,GAAzC,mBAAO+B,EAAP,KAAkBC,EAAlB,KAEAZ,qBAAU,WACRzB,EAAeqB,GACZK,MAAK,SAAA1C,GACJiD,EAAQjD,MAEZE,EAAgBmC,GACbK,MAAK,SAAA1C,GAAQ,OAAImD,EAAYnD,QAC/B,CAACqC,IAkBJ,OACE,sBAAKZ,UAAU,cAAf,UACE,+CAEA,0BAASA,UAAU,oBAAnB,UACE,oCAAKmB,QAAL,IAAKA,OAAL,EAAKA,EAAMtB,QACX,mCAAIsB,QAAJ,IAAIA,OAAJ,EAAIA,EAAMpC,UAGZ,0BAASiB,UAAU,wBAAnB,UACE,wBAAQI,KAAK,SAASJ,UAAU,SAASoB,QAd1B,WACnBQ,GAAYD,IAaR,SACGA,EAAS,eACEF,EAASI,OADX,4BAEEJ,EAASI,OAFX,eAKZ,oBAAI7B,UAAU,oBAAd,SACG2B,GACC,mCACGF,EAASP,KAAI,SAAAY,GAAO,OACnB,qBAAI9B,UAAU,yBAAd,UACE,4BAAI8B,EAAQ/C,OACZ,wBACEqB,KAAK,SACLJ,UAAU,oCACVoB,QAAS,kBAnCIjC,EAmCwB2C,EAAQT,QAlC7DnC,EAAcC,GACX8B,MAAK,kBAAMxC,EAAgBmC,MAC3BK,MAAK,SAAA1C,GAAQ,OAAImD,EAAYnD,MAHJ,IAACY,GAgCf,iBAF0C2C,EAAQT,cAgB9D,kCACE,qBAAKrB,UAAU,4BAAf,SACE,cAAC,EAAD,CACEY,eAAgBA,EAChBjB,MAxDY,SAACf,GACrBD,EAAWC,GACRqC,MAAK,kBAAMxC,EAAgBmC,MAC3BK,MAAK,SAAA1C,GAAQ,OAAImD,EAAYnD,iBCIrBwD,EAzBO,WACpB,MAA4BnC,mBAAS,GAArC,mBAAOlB,EAAP,KAAesD,EAAf,KAEA,OACE,qBAAKhC,UAAU,MAAf,SACE,uBAAMA,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACA,cAAC,EAAD,CACIY,eAAgBlC,EAChBmC,WAAYmB,MAIJ,IAAXtD,GACC,qBAAKsB,UAAU,eAAf,SACE,cAAC,EAAD,CACEY,eAAgBlC,YChB9BuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.a181fea3.chunk.js","sourcesContent":["export const BASE_URL = 'https://bloggy-api.herokuapp.com';\n\nexport const request = async (url:string, item = {}) => {\n  const response = await fetch(`${BASE_URL}/${url}`, item);\n\n  return response.json();\n};\n\nexport const getPostComments = async (postId: number) => {\n  return request(`comments?postId=${postId}`);\n};\n\nexport const addComment = async (newComment: Comment) => {\n  return request('comments', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n};\n\nexport const deleteComment = async (commentsId: number) => {\n  return request(`comments/${commentsId}`, { method: 'DELETE' });\n};\n\nexport const addPost = async (newPost: Post) => {\n  return request('posts', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(newPost),\n  });\n};\n\nexport const getPosts = async () => {\n  return request('posts', {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n    },\n  });\n};\n\nexport const getPostDetails = async (postId: number) => {\n  return request(`posts/${postId}?_embed=comments`);\n};\n\nexport const deletePost = async (postId: number) => {\n  return request(`posts/${postId}`, { method: 'DELETE' });\n};\n\nexport const UpdatePost = async (postId: number) => {\n  return request (`posts/${postId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(postId),\n  });\n};\n","import React, { FormEvent, useState } from 'react';\n\ntype Props = {\n  onAdd: (newPost: Partial<Post>) => void;\n};\n\nexport const NewPostForm: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd({\n      title,\n      body,\n    });\n\n    setTitle('');\n    setBody('');\n  };\n\n  return (\n    <form className=\"NewPostForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Add your title\"\n          className=\"NewPostForm__input\"\n          required\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type post here\"\n          className=\"NewPostForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewPostForm__submit-button button\"\n      >\n        Add a post\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { addPost, deletePost, getPosts } from '../api/api';\nimport { NewPostForm } from './NewPostForm';\n\ntype Props = {\n  selectedPostId: number;\n  selectPost: (postId :number) => void;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { selectedPostId, selectPost } = props;\n  const [posts, setPosts] = useState([] as Post[]);\n\n  useEffect(() => {\n    getPosts()\n      .then(response => setPosts(response));\n  }, []);\n\n  const handleChange = (id: number) => {\n    if (selectedPostId === id) {\n      selectPost(0);\n    } else {\n      selectPost(id);\n    }\n  };\n\n  const addNewPost = (newPost: Partial<Post>) => {\n    addPost(newPost as Post)\n      .then(() => getPosts())\n      .then(response => setPosts(response));\n  };\n\n  const deletePostFromServer = (postId: number) => {\n    deletePost(postId)\n      .then(() => getPosts())\n      .then(response => setPosts(response));\n  };\n\n  return (\n    <>\n      <div className=\"PostsList\">\n        <h2>Posts:</h2>\n        <NewPostForm\n          onAdd={addNewPost}\n        />\n\n        <ul className=\"PostsList__list\">\n          {posts.map(post => (\n            <li className=\"PostsList__item\" key={post.id}>\n              <div>\n                {post.title}\n              </div>\n              <div className=\"PostsList__buttons\">\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => deletePostFromServer(post.id)}\n                >\n                  Delete\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => handleChange(post.id)}\n                >\n                  {selectedPostId === post.id\n                    ? 'Close'\n                    : 'Open' }\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React, { FormEvent, useState } from 'react';\n\ntype Props = {\n  selectedPostId: number;\n  onAdd: (newComment: Partial<Comment>) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { selectedPostId, onAdd } = props;\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd({\n      postId: selectedPostId,\n      body,\n    });\n\n    setBody('');\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostDetails, addComment, deleteComment, getPostComments } from '../api/api';\nimport { NewCommentForm } from './NewCommentForm';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n  const [post, setPost] = useState(null as Post | null);\n  const [comments, setComments] = useState([] as Comment[]);\n  const [isVisible, setVisible] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(response => {\n        setPost(response);\n      });\n    getPostComments(selectedPostId)\n      .then(response => setComments(response));\n  }, [selectedPostId]);\n\n  const addNewComment = (newComment: Partial<Comment>) => {\n    addComment(newComment as Comment)\n      .then(() => getPostComments(selectedPostId))\n      .then(response => setComments(response));\n  };\n\n  const deleteCommentOnServer = (commentsId: number) => {\n    deleteComment(commentsId)\n      .then(() => getPostComments(selectedPostId))\n      .then(response => setComments(response));\n  };\n\n  const handleChange = () => {\n    setVisible(!isVisible);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <h3>{post?.title}</h3>\n        <p>{post?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button type=\"button\" className=\"button\" onClick={handleChange}>\n          {isVisible\n            ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`}\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {isVisible && (\n            <>\n              {comments.map(comment => (\n                <li className=\"PostDetails__list-item\" key={comment.id}>\n                  <p>{comment.body}</p>\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deleteCommentOnServer(comment.id)}\n                  >\n                    X\n                  </button>\n                </li>\n              ))}\n            </>\n          )}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            onAdd={addNewComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [postId, setPostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n        <PostsList\n            selectedPostId={postId}\n            selectPost={setPostId}\n          />\n        </div>\n\n        {postId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails\n              selectedPostId={postId}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,document.getElementById('root'),\n);\n\n"],"sourceRoot":""}